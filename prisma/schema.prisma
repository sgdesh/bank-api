generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  mobileNumber     String    @unique
  // Add more fields as needed
  bankAccounts BankAccount[]
}

model BankAccount {
  id         Int          @id @default(autoincrement())
  balance    Decimal
  // Add more fields as needed

  customerId Int
  customer   Customer     @relation(fields: [customerId], references: [id])
  transactions Transaction[]
  loanaccounts       LoanAccount[]
  loanrequests       LoanRequest[]
}

model Transaction {
  id              Int            @id @default(autoincrement())
  amount          Decimal
  description     String
  transactionType TransactionType
  status          TransactionStatus

  bankAccountId   Int
  bankAccount     BankAccount    @relation(fields: [bankAccountId], references: [id])
}


model LoanRequest {
  id          Int      @id @default(autoincrement())
  amount      Decimal
  interest    Decimal
  status      LoanRequestStatus @default(REQUESTED)

  bankAccountId Int
  bankAccount   BankAccount      @relation(fields: [bankAccountId], references: [id])
}

model LoanAccount {
  id          Int      @id @default(autoincrement())
  amount      Decimal
  interest    Decimal
  status      LoanAccountStatus @default(PENDING)
  // Add more fields as needed

  bankAccountId Int
  bankAccount   BankAccount      @relation(fields: [bankAccountId], references: [id])
}

// Enum for LoanRequestStatus
enum LoanRequestStatus {
  REQUESTED
  APPROVED
  REJECTED
}

// Enum for LoanAccountStatus
enum LoanAccountStatus {
  PENDING
  APPROVED
  REJECTED
}

// Enum for TransactionType
enum TransactionType {
  DEBIT
  CREDIT
}

// Enum for TransactionStatus
enum TransactionStatus {
  SUCCESSFUL
  FAILED
}